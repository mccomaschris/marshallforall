/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Nunito Sans", "sans-serif";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --container-5xl: 64rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --leading-tight: 1.25;
    --leading-normal: 1.5;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-mont: "Montserrat", "sans-serif";
    --color-green-bright: #08cd4f;
    --color-green: #00ac3e;
    --color-white: #ffffff;
    --color-gray-50: #fafafa;
    --color-gray-100: #edeeee;
    --color-gray-200: #cbcece;
    --color-gray-500: #535c5c;
    --color-gray-600: #3a4040;
    --color-gray-700: #313737;
    --color-gray-800: #212424;
    --color-gray-900: #131716;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-5 {
    z-index: 5;
  }
  .z-10 {
    z-index: 10;
  }
  .z-1000 {
    z-index: 1000;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-36 {
    height: calc(var(--spacing) * 36);
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .max-h-0 {
    max-height: calc(var(--spacing) * 0);
  }
  .max-h-\[50rem\] {
    max-height: 50rem;
  }
  .min-h-112 {
    min-height: calc(var(--spacing) * 112);
  }
  .min-h-\[18rem\] {
    min-height: 18rem;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-36 {
    width: calc(var(--spacing) * 36);
  }
  .w-full {
    width: 100%;
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .min-w-\[56px\] {
    min-width: 56px;
  }
  .flex-1 {
    flex: 1;
  }
  .will-animate {
    --tw-translate-y: calc(var(--spacing) * 12);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    transition-delay: 100ms;
    --tw-duration: 700ms;
    transition-duration: 700ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &[data-animate] {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &[data-animate] {
      opacity: 100%;
    }
    @media (width >= 1024px) {
      --tw-translate-y: calc(var(--spacing) * 16);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-gray-900\/10 {
    border-color: color-mix(in srgb, #131716 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
  }
  .border-gray-900\/20 {
    border-color: color-mix(in srgb, #131716 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-gray-900) 20%, transparent);
    }
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-gray-900\/10 {
    background-color: color-mix(in srgb, #131716 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
  }
  .bg-green {
    background-color: var(--color-green);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-linear-to-b {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-t {
    --tw-gradient-position: to top;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to top in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-gray-900\/50 {
    --tw-gradient-from: color-mix(in srgb, #131716 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-900\/80 {
    --tw-gradient-from: color-mix(in srgb, #131716 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-gray-900\/30 {
    --tw-gradient-via: color-mix(in srgb, #131716 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-gray-900) 30%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white\/0 {
    --tw-gradient-via: color-mix(in srgb, #ffffff 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 0%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white\/80 {
    --tw-gradient-via: color-mix(in srgb, #ffffff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-gray-900\/0 {
    --tw-gradient-to: color-mix(in srgb, #131716 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-gray-900) 0%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-900\/10 {
    --tw-gradient-to: color-mix(in srgb, #131716 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-white\/60 {
    --tw-gradient-to: color-mix(in srgb, #ffffff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-white\/80 {
    --tw-gradient-to: color-mix(in srgb, #ffffff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-white {
    fill: var(--color-white);
  }
  .object-cover {
    object-fit: cover;
  }
  .object-center {
    object-position: center;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-mont {
    font-family: var(--font-mont);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green {
    color: var(--color-green);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-green {
    --tw-ring-color: var(--color-green);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .animate-group {
    > :nth-child(2) {
      transition-delay: 200ms;
    }
    > :nth-child(3) {
      transition-delay: 300ms;
    }
    > :nth-child(4) {
      transition-delay: 400ms;
    }
  }
  .delay-100 {
    transition-delay: 100ms;
  }
  .delay-200 {
    transition-delay: 200ms;
  }
  .delay-300 {
    transition-delay: 300ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-400 {
    --tw-duration: 400ms;
    transition-duration: 400ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .group-hover\:max-h-\[300px\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        max-height: 300px;
      }
    }
  }
  .group-hover\:bg-gray-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .group-hover\:bg-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .group-hover\:fill-green {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-green);
      }
    }
  }
  .group-hover\:text-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .group-hover\:ring-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-ring-color: var(--color-white);
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:left-\[50\%\] {
    &::before {
      content: var(--tw-content);
      left: 50%;
    }
  }
  .before\:z-100 {
    &::before {
      content: var(--tw-content);
      z-index: 100;
    }
  }
  .before\:mx-auto {
    &::before {
      content: var(--tw-content);
      margin-inline: auto;
    }
  }
  .before\:h-px {
    &::before {
      content: var(--tw-content);
      height: 1px;
    }
  }
  .before\:w-1\/2 {
    &::before {
      content: var(--tw-content);
      width: calc(1/2 * 100%);
    }
  }
  .before\:translate-x-\[-50\%\] {
    &::before {
      content: var(--tw-content);
      --tw-translate-x: -50%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:bg-gray-900\/10 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #131716 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
      }
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .after\:content-\[\'\'\] {
    &::after {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .last\:after\:bg-transparent {
    &:last-child {
      &::after {
        content: var(--tw-content);
        background-color: transparent;
      }
    }
  }
  .even\:after\:bg-transparent {
    &:nth-child(even) {
      &::after {
        content: var(--tw-content);
        background-color: transparent;
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .sm\:h-36 {
    @media (width >= 640px) {
      height: calc(var(--spacing) * 36);
    }
  }
  .sm\:min-h-\[24rem\] {
    @media (width >= 640px) {
      min-height: 24rem;
    }
  }
  .md\:size-6 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .md\:h-12 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 12);
    }
  }
  .md\:h-14 {
    @media (width >= 768px) {
      height: calc(var(--spacing) * 14);
    }
  }
  .md\:w-12 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 12);
    }
  }
  .md\:w-14 {
    @media (width >= 768px) {
      width: calc(var(--spacing) * 14);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 768px) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 768px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:gap-6 {
    @media (width >= 768px) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:mt-8 {
    @media (width >= 1024px) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .lg\:h-24 {
    @media (width >= 1024px) {
      height: calc(var(--spacing) * 24);
    }
  }
  .lg\:h-48 {
    @media (width >= 1024px) {
      height: calc(var(--spacing) * 48);
    }
  }
  .lg\:h-auto {
    @media (width >= 1024px) {
      height: auto;
    }
  }
  .lg\:min-h-0 {
    @media (width >= 1024px) {
      min-height: calc(var(--spacing) * 0);
    }
  }
  .lg\:min-w-\[72px\] {
    @media (width >= 1024px) {
      min-width: 72px;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 1024px) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 1024px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 1024px) {
      flex-direction: row;
    }
  }
  .lg\:items-center {
    @media (width >= 1024px) {
      align-items: center;
    }
  }
  .lg\:gap-0 {
    @media (width >= 1024px) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .lg\:gap-12 {
    @media (width >= 1024px) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .lg\:from-20\% {
    @media (width >= 1024px) {
      --tw-gradient-from-position: 20%;
    }
  }
  .lg\:px-6 {
    @media (width >= 1024px) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-10 {
    @media (width >= 1024px) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:pr-8 {
    @media (width >= 1024px) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .lg\:pb-6 {
    @media (width >= 1024px) {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }
  .lg\:pl-6 {
    @media (width >= 1024px) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .lg\:pl-8 {
    @media (width >= 1024px) {
      padding-left: calc(var(--spacing) * 8);
    }
  }
  .lg\:text-center {
    @media (width >= 1024px) {
      text-align: center;
    }
  }
  .lg\:text-2xl {
    @media (width >= 1024px) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-3xl {
    @media (width >= 1024px) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 1024px) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 1024px) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 1024px) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 1024px) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:font-semibold {
    @media (width >= 1024px) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .lg\:\[transition-delay\:var\(--delay\)\] {
    @media (width >= 1024px) {
      transition-delay: var(--delay);
    }
  }
  .lg\:after\:absolute {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        position: absolute;
      }
    }
  }
  .lg\:after\:top-0 {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        top: calc(var(--spacing) * 0);
      }
    }
  }
  .lg\:after\:right-0 {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        right: calc(var(--spacing) * 0);
      }
    }
  }
  .lg\:after\:h-full {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        height: 100%;
      }
    }
  }
  .lg\:after\:w-px {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        width: 1px;
      }
    }
  }
  .lg\:after\:bg-gray-900\/10 {
    @media (width >= 1024px) {
      &::after {
        content: var(--tw-content);
        background-color: color-mix(in srgb, #131716 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
        }
      }
    }
  }
  .lg\:odd\:pl-0 {
    @media (width >= 1024px) {
      &:nth-child(odd) {
        padding-left: calc(var(--spacing) * 0);
      }
    }
  }
  .lg\:even\:pr-0 {
    @media (width >= 1024px) {
      &:nth-child(even) {
        padding-right: calc(var(--spacing) * 0);
      }
    }
  }
  .xl\:h-16 {
    @media (width >= 1440px) {
      height: calc(var(--spacing) * 16);
    }
  }
}
@layer base {
  *,	::after,	::before,	::backdrop,	::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}
@layer utilities {
  .cta-link {
    position: relative;
    margin-right: calc(var(--spacing) * 6);
    display: inline-flex;
    align-items: center;
    padding-right: calc(var(--spacing) * 8);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
    color: var(--color-gray-800);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: linear;
    transition-timing-function: linear;
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
    @media (width >= 1024px) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .cta-text {
      margin-right: calc(var(--spacing) * 2);
      --tw-gradient-position: to right;
      @supports (background-image: linear-gradient(in lab, red, red)) {
        --tw-gradient-position: to right in oklab;
      }
      background-image: linear-gradient(var(--tw-gradient-stops));
      --tw-gradient-from: var(--color-green-bright);
      --tw-gradient-to: var(--color-green-bright);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      background-size: 100% 2px;
      background-position: 100% 100%;
      background-repeat: no-repeat;
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      --tw-duration: 150ms;
      transition-duration: 150ms;
      --tw-ease: linear;
      transition-timing-function: linear;
      @media (width >= 1024px) {
        margin-right: calc(var(--spacing) * 4);
      }
    }
    &:hover span {
      background-size: 0 2px;
    }
  }
  .cta-link--dark {
    position: relative;
    margin-right: calc(var(--spacing) * 6);
    display: inline-flex;
    align-items: center;
    padding-right: calc(var(--spacing) * 8);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
    color: var(--color-white);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: linear;
    transition-timing-function: linear;
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    @media (width >= 1024px) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .cta-text {
      margin-right: calc(var(--spacing) * 2);
      --tw-gradient-position: to right;
      @supports (background-image: linear-gradient(in lab, red, red)) {
        --tw-gradient-position: to right in oklab;
      }
      background-image: linear-gradient(var(--tw-gradient-stops));
      --tw-gradient-from: var(--color-green-bright);
      --tw-gradient-to: var(--color-green-bright);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      background-size: 100% 2px;
      background-position: 100% 100%;
      background-repeat: no-repeat;
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      --tw-duration: 150ms;
      transition-duration: 150ms;
      --tw-ease: linear;
      transition-timing-function: linear;
      @media (width >= 1024px) {
        margin-right: calc(var(--spacing) * 4);
      }
    }
    &:hover span {
      background-size: 0 2px;
    }
  }
  .cta-link:only-child,	.cta-link--dark:only-child {
    margin-right: calc(var(--spacing) * 0);
    padding-right: calc(var(--spacing) * 0);
    @media (width >= 1024px) {
      margin-right: calc(var(--spacing) * 6);
    }
    @media (width >= 1024px) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .cta-link::before {
    --tw-content: '';
    content: var(--tw-content);
    @media (width >= 1024px) {
      position: absolute;
    }
    @media (width >= 1024px) {
      top: calc(var(--spacing) * 0);
    }
    @media (width >= 1024px) {
      right: calc(var(--spacing) * 0);
    }
    @media (width >= 1024px) {
      height: 100%;
    }
    @media (width >= 1024px) {
      width: 1px;
    }
    @media (width >= 1024px) {
      background-color: color-mix(in srgb, #131716 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
      }
    }
  }
  .cta-link--dark::before {
    --tw-content: '';
    content: var(--tw-content);
    @media (width >= 1024px) {
      position: absolute;
    }
    @media (width >= 1024px) {
      top: calc(var(--spacing) * 0);
    }
    @media (width >= 1024px) {
      right: calc(var(--spacing) * 0);
    }
    @media (width >= 1024px) {
      height: 100%;
    }
    @media (width >= 1024px) {
      width: 1px;
    }
    @media (width >= 1024px) {
      background-color: color-mix(in srgb, #ffffff 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .cta-link--dark:last-child:before,	.cta-link:last-child:before {
    background-color: transparent;
  }
  .cta-link::after {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="%23131716"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>');
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    transition-delay: 25ms;
    --tw-duration: 100ms;
    transition-duration: 100ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    --tw-content: '';
    content: var(--tw-content);
    @media (width >= 1024px) {
      position: absolute;
    }
    @media (width >= 1024px) {
      right: calc(var(--spacing) * 4);
    }
  }
  .cta-link--dark::after {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="%23ffffff"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>');
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    transition-delay: 25ms;
    --tw-duration: 100ms;
    transition-duration: 100ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    --tw-content: '';
    content: var(--tw-content);
    @media (width >= 1024px) {
      position: absolute;
    }
    @media (width >= 1024px) {
      right: calc(var(--spacing) * 4);
    }
  }
  .cta-link:hover::after {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="%2300AC3E"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>');
    right: calc(var(--spacing) * 3);
  }
  .cta-link--dark:hover::after {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="%2308cd4f"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>');
    right: calc(var(--spacing) * 3);
  }
  .cta-link--vertical {
    @media (width >= 1024px) {
      margin-right: calc(var(--spacing) * 0);
    }
    @media (width >= 1024px) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .cta-link--vertical::before {
    @media (width >= 1024px) {
      background-color: transparent;
    }
  }
  .cta-link--vertical::after {
    @media (width >= 1024px) {
      position: relative;
    }
    @media (width >= 1024px) {
      margin-left: calc(var(--spacing) * 4);
    }
  }
  .cta--link--green:hover::after {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="%23ffffff"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25" /></svg>');
  }
  a .animate-text {
    position: relative;
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-green-bright);
    --tw-gradient-to: var(--color-green-bright);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    background-size: 100% 2px;
    background-position: 0 100%;
    background-repeat: no-repeat;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: linear;
    transition-timing-function: linear;
    @media (width >= 1024px) {
      background-size: 0% 2px;
    }
  }
  a:hover .animate-text {
    background-size: 100% 2px;
  }
  .animator {
    position: relative;
    display: inline-block;
  }
  .animator::after {
    position: absolute;
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    height: 2px;
    width: 100%;
    transform-origin: 0;
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    background-color: var(--color-green-bright);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    --tw-content: '';
    content: var(--tw-content);
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-white);
    }
  }
  .animator:hover::after {
    --tw-scale-x: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .top-separator {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      left: 50%;
    }
    &::before {
      content: var(--tw-content);
      z-index: 100;
    }
    &::before {
      content: var(--tw-content);
      margin-inline: auto;
    }
    &::before {
      content: var(--tw-content);
      height: 1px;
    }
    &::before {
      content: var(--tw-content);
      width: calc(1/2 * 100%);
    }
    &::before {
      content: var(--tw-content);
      --tw-translate-x: -50%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #131716 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
      }
    }
    &::before {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
}
.animate-link {
  position: relative;
  --tw-gradient-position: to right;
  @supports (background-image: linear-gradient(in lab, red, red)) {
    --tw-gradient-position: to right in oklab;
  }
  background-image: linear-gradient(var(--tw-gradient-stops));
  --tw-gradient-from: var(--color-green-bright);
  --tw-gradient-to: var(--color-green-bright);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  background-size: 100% 2px;
  background-position: 0 100%;
  background-repeat: no-repeat;
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-gray-800);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 300ms;
  transition-duration: 300ms;
  --tw-ease: linear;
  transition-timing-function: linear;
  &:hover {
    @media (hover: hover) {
      background-size: 0% 2px;
    }
  }
  @media (width >= 1024px) {
    background-size: 100% 2px;
  }
}
[data-animate] {
  --tw-translate-y: calc(var(--spacing) * 12);
  translate: var(--tw-translate-x) var(--tw-translate-y);
  opacity: 0%;
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  transition-delay: 100ms;
  --tw-duration: 700ms;
  transition-duration: 700ms;
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
  &[data-in-view] {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  &[data-in-view] {
    opacity: 100%;
  }
  @media (width >= 1024px) {
    --tw-translate-y: calc(var(--spacing) * 16);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  @media (min-width: 1024px) {
    transition-delay: var(--delay, 100ms);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-content: "";
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
